<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>verilog on MD98 page</title><link>http://makerdark98.dev/tags/verilog/</link><description>Recent content in verilog on MD98 page</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Thu, 25 Jun 2020 20:46:51 +0900</lastBuildDate><atom:link href="http://makerdark98.dev/tags/verilog/index.xml" rel="self" type="application/rss+xml"/><item><title>verilog (베릴로그)</title><link>http://makerdark98.dev/wiki/verilog/</link><pubDate>Thu, 25 Jun 2020 20:46:51 +0900</pubDate><guid>http://makerdark98.dev/wiki/verilog/</guid><description>개요 openssd가 verilog가 짜져있어서 읽을수 있을 수준까지 공부하는게 목표 출처 기본 문법 : https://blog.naver.com/PostView.nhn?blogId=kyj0833&amp;amp;logNo=221490972642&amp;amp;from=search&amp;amp;redirect=Log&amp;amp;widgetTypeCall=true&amp;amp;directAccess=false 리눅스에서 verilog 사용하기 : https://www.sapphosound.com/archives/1894 http://www.asic-world.com/verilog/intro1.html#Design_Styles 기본 문법 module module_name(port_list); port, reg, wire, parameter declaration submodule instance primitive gate always, initial assign, funciton, task declaration function, task definition endmodule Hello World module main; initial begin $display(&amp;#34;Hello World&amp;#34;); $finish; end endmodule D flip-flop Code module d_ff (d, clk, q, q_bar); input d, clk; output q, q_bar; wire d, clk; reg q, q_bar; always @ (posedge clk) begin q &amp;lt;= d; q_bar &amp;lt;= !</description></item></channel></rss>