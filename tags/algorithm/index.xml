<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>algorithm on MD98 page</title><link>http://makerdark98.dev/tags/algorithm/</link><description>Recent content in algorithm on MD98 page</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sat, 08 Aug 2020 00:10:21 +0900</lastBuildDate><atom:link href="http://makerdark98.dev/tags/algorithm/index.xml" rel="self" type="application/rss+xml"/><item><title>algorithm teamnote</title><link>http://makerdark98.dev/wiki/teamnote/</link><pubDate>Sat, 08 Aug 2020 00:10:21 +0900</pubDate><guid>http://makerdark98.dev/wiki/teamnote/</guid><description>Binary Search 1 차이로 문제를 틀리는 일이 빈번해서, 틀리지 않게 자주 쓰이는 폼 정리 int s = 0, e = n -1; while (s &amp;lt;= e) { int m = (s + e) / 2; if (array[m] == x) { // 위치 m 에서 x를 찾음 } if (array[m] &amp;lt; x) s = m + 1; else e = m -1; } int k = 0; for (int i = n / 2; i &amp;gt;= 1; i /= 2) { while (k + i &amp;lt; n &amp;amp;&amp;amp; array[k +i] &amp;lt;= x) k += i; } if (array[k] == x) { // 위치 k 에서 x를 찾음.</description></item><item><title>lectures/algorithm</title><link>http://makerdark98.dev/wiki/lectures/algorithm/</link><pubDate>Tue, 07 Apr 2020 20:37:08 +0900</pubDate><guid>http://makerdark98.dev/wiki/lectures/algorithm/</guid><description>Basic Sorting algorithm The most common uses of sorted sequences are making lookup or search efficient; making merging of sequences efficient enable processing of data in a defined order Sorting algorithm The output of any sorting algorithm must satisfy two conditions
The output is in non-decreasing order: each element is no smaller than the previous element according to the desired total order The output is a permutation meaning that a reordering, yet retaining all of the original elements of the input.</description></item></channel></rss>