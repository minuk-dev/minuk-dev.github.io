<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fuse on MD98 page</title><link>https://makerdark98.dev/tags/fuse/</link><description>Recent content in fuse on MD98 page</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Fri, 04 Sep 2020 20:06:36 +0900</lastBuildDate><atom:link href="https://makerdark98.dev/tags/fuse/index.xml" rel="self" type="application/rss+xml"/><item><title>Filesystem in Userspace</title><link>https://makerdark98.dev/wiki/fuse/</link><pubDate>Fri, 04 Sep 2020 20:06:36 +0900</pubDate><guid>https://makerdark98.dev/wiki/fuse/</guid><description>계기 알게된 이유는, 옆에서 오라큰 파일 시스템이라는 단어를 말했는데 ????? 이라고 느껴서, 공부해보자고 찾아보면서 시작됬다. 기본 개념 파일시스템을 유저레벨에서 하고자 하는 경우 사용한다. 보통은 속도보다는 보호와 보안, 백업 등의 용도로 사용한다. application(user) -&amp;gt; glib(user) -&amp;gt; vfs(kernel) -&amp;gt; fuse module(kernel) -&amp;gt; glib(user) -&amp;gt; libfuse(user) -&amp;gt; user filesystem(user) -&amp;gt; &amp;hellip; 위와 같은 순서로 진행된다. 그러면 성능은? 이라는 생각이 들어서 찾아보니, FAST'17에서 나온 To FUSE or Not to FUSE: Performance of User-Space File Systems 라는 논문이 있다.</description></item></channel></rss>