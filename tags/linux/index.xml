<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>linux on MD98 page</title><link>http://makerdark98.dev/tags/linux/</link><description>Recent content in linux on MD98 page</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Sun, 21 Jun 2020 19:42:23 +0900</lastBuildDate><atom:link href="http://makerdark98.dev/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>delayed work</title><link>http://makerdark98.dev/wiki/delayed_work/</link><pubDate>Sun, 21 Jun 2020 19:42:23 +0900</pubDate><guid>http://makerdark98.dev/wiki/delayed_work/</guid><description>참조 사이트 http://egloos.zum.com/rousalome/v/9990982 delayed work 일정 시간 뒤에 지연시켜서 워크를 실행하는 방법 사용방법 출처 : http://egloos.zum.com/rousalome/v/9982311 INIT_DELAYED_WORKWORK() INIT_DELAYED_WORK(&amp;amp;work, handler); queue_delayed_work(workqueue, &amp;amp;work, delayed_time); 같이보기 좋은 자료 [[workqueue]]</description></item><item><title>blk_mq</title><link>http://makerdark98.dev/wiki/blk_mq/</link><pubDate>Fri, 19 Jun 2020 20:23:19 +0900</pubDate><guid>http://makerdark98.dev/wiki/blk_mq/</guid><description>##blk_mq : Linux Block IO: Introducing Multi-queue SSD Access on Multi-core Systems
https://www.thomas-krenn.com/en/wiki/Linux_Multi-Queue_Block_IO_Queueing_Mechanism_(blk-mq)_Details</description></item><item><title>PRP (Physical Region Page)</title><link>http://makerdark98.dev/wiki/prp/</link><pubDate>Thu, 18 Jun 2020 20:15:03 +0900</pubDate><guid>http://makerdark98.dev/wiki/prp/</guid><description>PRP 출처 : https://m.blog.naver.com/PostView.nhn?blogId=eldkrpdla121&amp;amp;logNo=220536014853&amp;amp;proxyReferer=https:%2F%2Fwww.google.com%2F 흠.. Pysical Region Page 말 그대로다. 혹시 모르니 위의 출처에 있는 말 그대로를 옮겨적자면, PRP contains the 64-bit physical memory page address. The lower bits (n:2) of this field indicate the offset within the memory page. N is defined by the memory page size. PRP List contains a list of PRPs with generally no offsets.</description></item><item><title>workqueue</title><link>http://makerdark98.dev/wiki/workqueue/</link><pubDate>Mon, 15 Jun 2020 20:14:50 +0900</pubDate><guid>http://makerdark98.dev/wiki/workqueue/</guid><description>참조 사이트 https://m.blog.naver.com/PostView.nhn?blogId=leojesus&amp;amp;logNo=80172478497&amp;amp;proxyReferer=https:%2F%2Fwww.google.com%2F workqueue 사용법 : https://selfish-developer.com/entry/workqueue-%EC%82%AC%EC%9A%A9%EB%B2%95 workqueue 지연처리를 하기 위해서 사용하는 자료구조 (다른 걸로는 SOFTIRQ, TASKLET 이 있음) 사용방법 출처 1: http://egloos.zum.com/rousalome/v/9982311 출처 2: http://egloos.zum.com/rousalome/v/9982570 INIT_WORK() 나 DECLARE_WORK()를 사용해서 초기화 INIT_WORK() : 커널이 실제로 INIT_WORK() 함수를 실행할때 워크를 초기화 DELCARE_WORK() : 커널이 컴파일 될때 세부정보가 포함된 전역 변수 생성 INIT_WORK(&amp;amp;work, handler); schedule_work(&amp;amp;work); /* enqueue work into system queue */ queue_work(&amp;amp;workqueue, &amp;amp;work) /* enqueue work */ queue_work_on(cpu, &amp;amp;workqueue, &amp;amp;work) /* enqueue work with exception handling */ 같이보기 좋은 자료 [[delayed_work]]</description></item><item><title>nvme</title><link>http://makerdark98.dev/wiki/nvme/</link><pubDate>Mon, 15 Jun 2020 20:13:59 +0900</pubDate><guid>http://makerdark98.dev/wiki/nvme/</guid><description>시작 아무것도 모르고 SSD 에 대해서 아는거라곤, 개발자를 위한 SSD 라는 카카오에서 올린 글(https://tech.kakao.com/2016/07/13/coding-for-ssd-part-1/) 와 [[simplessd]] 논문만 보고 무턱대고 시작한 공부 Linux NVMe 공부 [[workqueue]] [[block layer]] [[IO mapping]] [[blk_mq]] [[IOMMU]] [[SGL]]{Scatter-Gatter List} nvme 자료구조 https://testkernel.tistory.com/3 의문점 linux/drivers/nvme/host 에 있는 nvme 함수들은 어떻게 호출되는가? -&amp;gt; scsi interface 를 사용해서 -&amp;gt; 그러면 어디에 있지? source code를 찾아보고 싶다. -&amp;gt; 일단 request 는 찾았다. block device 에 접근 하려면 (실제로 block device는 아닐수도 있지만 SSD를 일단 Block 으로 사용하고 FTL 로 처리?</description></item><item><title>memory cache 비우기 (linux command)</title><link>http://makerdark98.dev/wiki/memory-cache-clean/</link><pubDate>Tue, 02 Jun 2020 20:39:40 +0900</pubDate><guid>http://makerdark98.dev/wiki/memory-cache-clean/</guid><description>pagecache 해제 echo 1 &amp;gt; /proc/sys/vm/drop_caches dentries, inodes 해제 echo 2 &amp;gt; /proc/sys/vm/drop_caches pagecache, dentries, inodes 모두 해제 echo 3 &amp;gt; /proc/sys/vm/drop_caches 플러싱하기 sync 출처 https://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_%EC%BA%90%EC%8B%9C_%EB%A9%94%EB%AA%A8%EB%A6%AC_%EB%B9%84%EC%9A%B0%EA%B8%B0</description></item><item><title>group descriptor table</title><link>http://makerdark98.dev/wiki/group-descriptor-table/</link><pubDate>Thu, 30 Apr 2020 20:17:00 +0900</pubDate><guid>http://makerdark98.dev/wiki/group-descriptor-table/</guid><description>설명 슈퍼블록 바로 다음에 위치하며, 파일 시스템의 블록 그룹들에 대한 정보를 가지고 있다. Group Descriptor의 크기는 32bytes로, 블록 크기가 1KB이라면 하나의 블록에 총 32개의 Group Descriptor가 기록될수 있다. 포함하는 주요 정보 Block Bitmap의 블록 번호, Inode Bitmap의 블록 번호, 첫번째 Inode Table Block의 블록번호, 그룹안에 있는 빈블록 수, 그룹 안에 있는 inode 수, 그룹 안에 있는 빈 디렉토리 수 등이다.</description></item><item><title>inode</title><link>http://makerdark98.dev/wiki/inode/</link><pubDate>Thu, 30 Apr 2020 20:08:55 +0900</pubDate><guid>http://makerdark98.dev/wiki/inode/</guid><description>설명 Unix에서 사용하는 전통적 파일 시스템에서 사용하는 자료 구조 정규파일, 디렉토리 등 파일시스템에 대한 정보를 가지고 있다. 일반적으로 inode에 포함된 정보 비트 내용 12-15 파일 형식(일반, 디렉터리, 문자 또는 블록 특별, 선입선출 파이프) 9-11 실행 플레그 8 소유자 읽기 권한 7 소유자 쓰기 권한 6 소유자 실행 권한 5 그룹 읽기 권한 4 그룹 쓰기 권한 3 그룹 실행 권한 2 다른 사용자 읽기 권한 1 다른 사용자 쓰기 권한 0 다른 사용자 실행 권한 링크 수 : 이 아이노드에 대한 디렉터리 참조수 소유자 아이디 그룹 아이디 파일 크기 파일 주소 (주소 정보 39바이트) 마지막 접근 시각 마지막 수정 시각 아이노드 수정 시각</description></item><item><title>The new ext4 filesystem: current status and future plans</title><link>http://makerdark98.dev/wiki/ext4/</link><pubDate>Thu, 30 Apr 2020 19:42:16 +0900</pubDate><guid>http://makerdark98.dev/wiki/ext4/</guid><description>Abstract 주요 키워드 : scalability, performance, reliability, stability 2007 년 논문임을 가만하고 읽으면 좋다. 1. Introduction ext3의 장점 : 안정성(stable), 엄격성(robust) ext3의 단점 : 큰 규모에 한계 (큰 파일과 많은 파일) 단점 극복에 관한 기존 방안 ext3는 최대 16TB 만 지원가능 이미 기업에선 한계점이 보임 (디스크 최대 용량은 매년 2배가 되고 있음) 물론, larger filesystem capacity와 extents mapping을 담고 있는 패치를 2006년 선보였으나, 이 패치는 결국 disk의 형식을 변경하고 호환성을 버릴수 밖에 없었다.</description></item><item><title>glob</title><link>http://makerdark98.dev/wiki/glob/</link><pubDate>Mon, 13 Apr 2020 22:06:38 +0900</pubDate><guid>http://makerdark98.dev/wiki/glob/</guid><description>glob Wikipedia In computer programming, glob patterns specify sets of filenames with wildcard characters. For example, the Unix Bash shell command mv *.txt textfiles/ moves (mv) all files with names ending in .txt from the current directory to the directory textfiles. Here, * is a wildcard standing for &amp;ldquo;any string of characters&amp;rdquo; and *.txt is a glob pattern. The other common wildcard is the question mark (?), which stands for one character.</description></item><item><title>tee (Linux Command)</title><link>http://makerdark98.dev/wiki/tee/</link><pubDate>Sun, 12 Apr 2020 20:29:35 +0900</pubDate><guid>http://makerdark98.dev/wiki/tee/</guid><description>사용 용도 stdin을 stdout 과 파일로 모두 보내고 싶을때</description></item><item><title>rm (Linux Command)</title><link>http://makerdark98.dev/wiki/rm/</link><pubDate>Sun, 12 Apr 2020 20:22:32 +0900</pubDate><guid>http://makerdark98.dev/wiki/rm/</guid><description>자주 사용하는 거 모음 특정 파일 제외하고 지우기 단일 $ rm -v !(&amp;#34;filename&amp;#34;) 다중 $ rm -v !(&amp;#34;filename1&amp;#34; | &amp;#34;filename2&amp;#34;) 만약 zsh을 쓰고 있다면 $ setopt extendedglob $ rm ^(&amp;#34;filename1&amp;#34; | &amp;#34;filename2&amp;#34;) Delete Files Using Extended Pattern Matching Operators *(pattern-list) : matches zero or more occurrences of the specified patterns ?(pattern-list) : matches zero or one occurence of the specified patterns +(pattern-list) : matches one or more occurrences of the spcified patterns @(pattern-list) : matches one of the spcified patterns !</description></item><item><title>Tool configuration</title><link>http://makerdark98.dev/wiki/tool-configuration/</link><pubDate>Tue, 07 Apr 2020 20:36:45 +0900</pubDate><guid>http://makerdark98.dev/wiki/tool-configuration/</guid><description>- Neovim - `.vimrc` &amp;quot; vim-bootstrap &amp;quot;***************************************************************************** &amp;quot;&amp;quot; Vim-PLug core &amp;quot;***************************************************************************** let vimplug_exists=expand('~/.config/nvim/autoload/plug.vim') let g:vim_bootstrap_langs = &amp;quot;c,html,javascript,python&amp;quot; let g:vim_bootstrap_editor = &amp;quot;nvim&amp;quot; &amp;quot; nvim or vim if !filereadable(vimplug_exists) if !executable(&amp;quot;curl&amp;quot;) echoerr &amp;quot;You have to install curl or first install vim-plug yourself!&amp;quot; execute &amp;quot;q!&amp;quot; endif echo &amp;quot;Installing Vim-Plug...&amp;quot; echo &amp;quot;&amp;quot; silent exec &amp;quot;!\curl -fLo &amp;quot; . vimplug_exists . &amp;quot; --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&amp;quot; let g:not_finish_vimplug = &amp;quot;yes&amp;quot; autocmd VimEnter * PlugInstall endif &amp;quot; Required: call plug#begin(expand('~/.</description></item><item><title>SSH Server Configuration</title><link>http://makerdark98.dev/wiki/ssh-server/</link><pubDate>Tue, 07 Apr 2020 20:36:17 +0900</pubDate><guid>http://makerdark98.dev/wiki/ssh-server/</guid><description> Installation
sudo apt install openssh-server
sudo vim /etc/ssh/sshd_config
generate key
ssh-keygen -R {id}@{host}
PermitRootLogin prohibit-password</description></item><item><title>Firewall (방화벽) Configuration</title><link>http://makerdark98.dev/wiki/firewall/</link><pubDate>Tue, 07 Apr 2020 20:36:02 +0900</pubDate><guid>http://makerdark98.dev/wiki/firewall/</guid><description> iptables
#iptables -nL
save firewall configuration #iptalbes-save &amp;gt; save_data.rules config firwall 아이피 111.222.111.222에 대해서 destination port 가 22이면 ACCEPT 하여라.
#iptables -A INPUT -s 111.222.111.222/32 -p tcp -m state &amp;ndash;state NEW -m tcp &amp;ndash;dport 22 -j ACCEPT-
save configuration persistent #apt install iptables-persistent rule directory : /etc/iptables/rules.v4
#iptables-save &amp;gt; /etc/iptables/rules.v4</description></item><item><title>ftp server command</title><link>http://makerdark98.dev/wiki/ftp/</link><pubDate>Tue, 07 Apr 2020 20:35:51 +0900</pubDate><guid>http://makerdark98.dev/wiki/ftp/</guid><description> use vsftpd(Very Secure FTP Server Daemon) Installation # apt install vsftpd check vsftpd status # service vsftpd status check network port # netstat -natp | grep ftp Configuration vsftpd # vi /etc/vsftpd.conf #/etc/vsftpd.conf listen=YES listen_ipv6=NO anonymous_enable=NO port_enable=NO pasv_enable=YES local_enable=YES write_enable=YES use_localtime=YES xferlog_enable=YES chroot_local_user=YES allow_writeable_chroot=YES secure_chroot_dir=/var/run/vsftpd/empty pam_service_name=vsftpd ftpd_banner=Welcom to My FTP Server! ssl_enable=YES rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key=/etc/ssl/private/ssl-cert-snakeoil.key listen_port=21 pasv_min_port=60020 pasv_max_port=60030 #utf8_filesystem=YES #local_umask=022</description></item><item><title>linux user command</title><link>http://makerdark98.dev/wiki/user/</link><pubDate>Tue, 07 Apr 2020 20:35:41 +0900</pubDate><guid>http://makerdark98.dev/wiki/user/</guid><description> check username
cat /etc/passwd | grep {username}
create user &amp;amp; select default shell
useradd {username} -m -s /bin/bash
password
echo {password} | passwd &amp;ndash;stdin {username}
home directory
mkhomedir_helper {username}</description></item><item><title>Brightness (화면 밝기 조절) command</title><link>http://makerdark98.dev/wiki/brightness/</link><pubDate>Tue, 07 Apr 2020 20:35:31 +0900</pubDate><guid>http://makerdark98.dev/wiki/brightness/</guid><description>echo 5000 | sudo tee /sys/class/backlight/intel_backlight/brightness</description></item><item><title>Wifi commands</title><link>http://makerdark98.dev/wiki/wifi-command-line/</link><pubDate>Tue, 07 Apr 2020 20:35:07 +0900</pubDate><guid>http://makerdark98.dev/wiki/wifi-command-line/</guid><description>Wifi Adapter 찾기
iw dev
Adapter status
ip link show wlp2s0
Adapter Start
ip link set wlp2s0 up
When Operation fail because of rfkill $rfkill list $sudo rfkill unblock wifi Wifi Adapter interface check
iw wlp2s0 link
Wifi Scan
iw wlp2s0 scan
Public Wifi Connect
sudo iw dev wlp2s0 connect iptime
WPA/WPA2 Wifi Connect
$ sudo wpa_passphrase ${SSID} &amp;gt; wpa_supplicant.</description></item><item><title>Linux Command 모음</title><link>http://makerdark98.dev/wiki/linux-command/</link><pubDate>Tue, 07 Apr 2020 20:34:57 +0900</pubDate><guid>http://makerdark98.dev/wiki/linux-command/</guid><description>command line [[wifi command line]] [[brightness]] [[rm]] [[tee]] [[glob]] [[free]] [[memory cache clean]] Server [[user]] [[ftp]] [[firewall]] [[ssh server]]</description></item></channel></rss>