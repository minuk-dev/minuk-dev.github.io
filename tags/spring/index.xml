<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spring on</title><link>https://minuk.dev/tags/spring/</link><description>Recent content in Spring on</description><generator>Hugo</generator><language>ko-kr</language><lastBuildDate>Mon, 19 Dec 2022 14:03:25 +0900</lastBuildDate><atom:link href="https://minuk.dev/tags/spring/index.xml" rel="self" type="application/rss+xml"/><item><title>spring boot cli</title><link>https://minuk.dev/wiki/spring-boot-cli/</link><pubDate>Mon, 19 Dec 2022 14:03:25 +0900</pubDate><guid>https://minuk.dev/wiki/spring-boot-cli/</guid><description>내가 써먹으려고 적어두는 cli snippet</description></item><item><title>my-page (나만의 홈페이지 만들기)</title><link>https://minuk.dev/wiki/my-page/</link><pubDate>Sat, 20 Jun 2020 00:40:20 +0900</pubDate><guid>https://minuk.dev/wiki/my-page/</guid><description>&lt;h1 id="시작">시작&lt;/h1>
&lt;ul>
&lt;li>예전에 React를 배우면서 구성하던 게 있었는데, 실제 사용성이 낮고 토이프로젝트로밖에 못쓴다고 생각했다. 물론 토이여도 상관 없을수 있지만 나는 장기적으로 내가 사용할수 있는 서비스를 구축해서 내가 스스로 쓰는게 목표이다.&lt;/li>
&lt;/ul>
&lt;h2 id="개발환경-설정">개발환경 설정&lt;/h2>
&lt;ul>
&lt;li>사실 이게 제일 귀찮다. 하지만 한번만 제대로 해놓으면 좋을 꺼라고 생각한다.&lt;/li>
&lt;li>그런 의미에서 항상 java로 개발할때 사용하던 Intellij 를 버리고, vim 환경에서 cli로만 짜보자는 생각을 하게되었다.&lt;/li>
&lt;li>물론 사실 요세 CLI와 GUI를 구별하는게 의미없다고 생각한다. 하지만 내가 주로 쓰는 툴들이 CLI, TUI 환경인 툴들이다 보니 (vimwiki, tig, tmux, tmuxinator) 당연하게도 spring은 왜 vim에서 못하나 생각이 들었다.&lt;/li>
&lt;/ul>
&lt;h3 id="spring-cli-설정">spring cli 설정&lt;/h3>
&lt;h4 id="sdkman">sdkman&lt;/h4>
&lt;ul>
&lt;li>&lt;code>sdkman&lt;/code> 이라는 패키지매니저? 프로그램 관리툴? 을 사용해서 spring-cli를 까는게 제일 일반적인것 같아서 깔았다.&lt;/li>
&lt;li>공홈 : &lt;a href="https://sdkman.io/install">https://sdkman.io/install&lt;/a>&lt;/li>
&lt;/ul>







&lt;div class="codeblock">
 
 &lt;div class="copy-button-box">
 &lt;button class="copy-button" state="copy" data="#ZgotmplZ">
 &lt;i class="bi bi-copy">&lt;/i>
 &lt;/button>
 &lt;/div>
 

 
 &lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -s &lt;span style="color:#e6db74">&amp;#34;https://get.sdkman.io&amp;#34;&lt;/span> | bash&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 
&lt;/div>
&lt;h4 id="spring-boot-cli-설정">spring boot cli 설정&lt;/h4>
&lt;ul>
&lt;li>공홈 : &lt;a href="https://docs.spring.io/spring-boot/docs/current/reference/html/getting-started.html#getting-started-installing-the-cli">https://docs.spring.io/spring-boot/docs/current/reference/html/getting-started.html#getting-started-installing-the-cli&lt;/a>&lt;/li>
&lt;/ul>







&lt;div class="codeblock">
 
 &lt;div class="copy-button-box">
 &lt;button class="copy-button" state="copy" data="sdk%20install%20springboot">
 &lt;i class="bi bi-copy">&lt;/i>
 &lt;/button>
 &lt;/div>
 

 
 &lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sdk install springboot&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
 
&lt;/div>
&lt;h4 id="open-jdk-설치">open-jdk 설치&lt;/h4>
&lt;ul>
&lt;li>실행해보니 JAVA_HOME 을 못잡는다. 생각해보니 한번도 java를 실행한적이 없다. jdk를 깔아주자&lt;/li>
&lt;/ul>







&lt;div class="codeblock">
 
 &lt;div class="copy-button-box">
 &lt;button class="copy-button" state="copy" data="sudo%20apt%20install%20openjdk-11-jdk">
 &lt;i class="bi bi-copy">&lt;/i>
 &lt;/button>
 &lt;/div>
 

 
 &lt;pre>&lt;code>sudo apt install openjdk-11-jdk&lt;/code>&lt;/pre>
 
&lt;/div>
&lt;h4 id="중간-잡담">중간 잡담&lt;/h4>
&lt;ul>
&lt;li>나름 잘된다. 물론 spring boot cli를 이용하는게 아니라 홈페이지에서 프로젝트 설정을 받는 방법도 있다. 하지만 개인적 취향이 아니므로 한번 하고싶은대로 하자. 어짜피 개인프로젝트인데, 실제 협업할때는 맘대로 하고싶어도 못할텐데&lt;/li>
&lt;/ul>
&lt;h4 id="vim-설정">vim 설정&lt;/h4>
&lt;ul>
&lt;li>기존에 나는 [[coc]]를 사용하고 있었다.&lt;/li>
&lt;li>coc java는 없나 싶어서 찾아보니 있다. 설치해주자&lt;/li>
&lt;li>공홈 : &lt;a href="https://github.com/neoclide/coc-java">https://github.com/neoclide/coc-java&lt;/a>&lt;/li>
&lt;/ul>







&lt;div class="codeblock">
 
 &lt;div class="copy-button-box">
 &lt;button class="copy-button" state="copy" data="#ZgotmplZ">
 &lt;i class="bi bi-copy">&lt;/i>
 &lt;/button>
 &lt;/div>
 

 
 &lt;pre>&lt;code>:CocInstall coc-java&lt;/code>&lt;/pre>
 
&lt;/div>
&lt;ul>
&lt;li>자동으로 maven 이나 gradle 설정을 찾아서 한다고 한다. 어짜피 spring boot cli 도 maven을 사용하니 신경쓰지 않고 사용해도 된다.&lt;/li>
&lt;/ul>
&lt;h4 id="tmuxinator-설정">tmuxinator 설정&lt;/h4>
&lt;ul>
&lt;li>매번 켜주기 귀찮다. [[tmuxinator]] 를 활용하자. 다른 프로젝트들도 그렇듯이 자동으로 프로젝트를 통째로 열수 있게 해놓자.&lt;/li>
&lt;/ul>







&lt;div class="codeblock">
 
 &lt;div class="copy-button-box">
 &lt;button class="copy-button" state="copy" data="#%20~/.tmuxinator/page.yml%0a%0aname:%20page%0aroot:%20~/workspace/page%0a%0awindows:%0a%20%20-%20editor:%0a%20%20%20%20%20%20-%20nvim%20&amp;#43;%22SLoad%20page%22%0a%20%20-%20server:%20%0a%20%20-%20logs:%20">
 &lt;i class="bi bi-copy">&lt;/i>
 &lt;/button>
 &lt;/div>
 

 
 &lt;pre>&lt;code># ~/.tmuxinator/page.yml

name: page
root: ~/workspace/page

windows:
 - editor:
 - nvim &amp;#43;&amp;#34;SLoad page&amp;#34;
 - server: 
 - logs: &lt;/code>&lt;/pre>
 
&lt;/div>
&lt;ul>
&lt;li>여기서 vim 도 session 자동으로 열어주는 [[vim-staritfy]]를 사용해서 설정해놓았다.&lt;/li>
&lt;li>server 나 logs 부분은 아직 안적어 놓았다. 나중에 필요하면 적고, 일단은 빈 쉘이 열리도록 하자.&lt;/li>
&lt;/ul>
&lt;h3 id="개발">개발&lt;/h3>
&lt;ul>
&lt;li>올바른 설계 방법은 사실 기능에 집중하고 인증이나 부차적인 것을 나중에 집중하는게 맞다고 생각한다. 하지만 개인 플젝인걸 다시 한번 강조하고, 귀찮은 부분을 제일 처음 처리하고 싶어하는 성격을 고려하여&lt;/li>
&lt;li>인증 - 데이터베이스 - 패키지 구조 설계 - 서비스 및 관리용 cli 프로그램 - 웹 순서로 코딩할 생각이다.&lt;/li>
&lt;/ul>
&lt;h4 id="인증부분">인증부분&lt;/h4>
&lt;ul>
&lt;li>인증은 혹시라도 나중에 react 나 vue 같은 front-end framework 를 쓰고 싶어질수도 있다는 생각하에 (&lt;del>사실 지금은 SSR 같은 부분이 잘 지원안될것 같아서 하고 싶지 않다. front-end와 back-end 를 서로 다르게 구성하고 nginx 같은걸로 묶는 건 더 싫다. 개인적으로 모노리스 서비스가 좋다.&lt;/del>) [[jwt]]를 사용해보자.&lt;/li>
&lt;li>참고 자료 : &lt;a href="https://velog.io/@minholee_93/Spring-Security-JWT-Security-Spring-Boot-10">https://velog.io/@minholee_93/Spring-Security-JWT-Security-Spring-Boot-10&lt;/a>&lt;/li>
&lt;li>jwt spring 치면 제일 상단에 나오는 글 보고 하기로 했다.&lt;/li>
&lt;li>안되면 그냥 spring-security 공식 doc 보고 하면 될듯, 대충 찾아보면 대부분 양산형 블로그들이다. 그냥 공식 문서가 훨씬 퀄리티 좋다고 생각한다.&lt;/li>
&lt;li>&lt;/li>
&lt;/ul></description></item></channel></rss>